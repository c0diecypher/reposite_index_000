const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const cors = require('cors');
const token = process.env.TELEGRAM_BOT_TOKEN;
const { validate } = require('@twa.js/init-data-node');
const bot = new TelegramBot(token, {polling: true});
const app = express();
app.use(express.json());
app.use(cors());
const start = `‚ö°<strong>ZipperApp</strong> - —Ç–≤–æ–π –Ω–∞–¥–µ–∂–Ω—ã–π –≥–∏–¥ –≤ –º–∏—Ä–µ —Å—Ç–∏–ª—å–Ω–æ–π –æ–¥–µ–∂–¥—ã –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑-–∑–∞ —Ä—É–±–µ–∂–∞!
\n\
üîç <strong>–ò–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–ª–∏ –ø–æ–∏—Å–∫–∞</strong>
–ú—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤–∞–º –±–æ–ª–µ–µ 8500 —Å—Ç–∏–ª—å–Ω—ã—Ö –∫—Ä–æ—Å—Å–æ–≤–æ–∫ –∏–∑ Poizon —Å –ø–æ–ª–Ω—ã–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ —Ü–µ–Ω –≤ —Ä—É–±–ª—è—Ö.
\n\
üë©‚Äçüíº <strong>–° –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞</strong>
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç –º–æ–¥–µ–ª—å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∏ –ø–æ–ª—É—á–∏ —Ü–µ–Ω—É –Ω–∞ 30-50% –¥–µ—à–µ–≤–ª–µ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –¥—Ä—É–≥–∏–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏!
\n\
–ü–æ–∫—É–ø–∞–π—Ç–µ —Å—Ç–∏–ª—å–Ω–æ –∏ –≤—ã–≥–æ–¥–Ω–æ —Å <strong>ZipperApp!</strong>`
;


app.post('/validate-initdata', (req, res) => {
  try {
    // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Authorization
    const initData = req.headers.authorization;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const validationResult = validate(initData, token);

    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é, –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É
    if (!validationResult.isValid) {
      return res.status(400).json({ error: 'Invalid init data' });
    }

    // –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é, –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –¥–∞–ª—å—à–µ
    // validationResult.data —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const query_id = validationResult.data.query_id;
    const user = validationResult.data.user;
    const auth_date = validationResult.data.auth_date;
    const hash = validationResult.data.hash;

    // –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å

    // –í–µ—Ä–Ω—É—Ç—å —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    res.status(200).json({ success: true });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
});

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});
const webAppUrl = 'https://zipperapp.vercel.app/'

bot.on('message', async(msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
    if(text === '/start'){
        await bot.sendMessage(chatId,start,{
            reply_markup: {
                inline_keyboard: [
                    [{text: 'Open App', web_app: {url: webAppUrl}}]
                ]
            },
            parse_mode: 'HTML'
        })
    }
});

app.get('/', (req, res) => {
    // –í–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–¥–µ—Å—å
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    res.send('Cannot GET /zipperapp');
  });

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ GET –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∞–¥—Ä–µ—Å–∞ /web-data
app.get('/web-data', (req, res) => {
    // –í–∞—à –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ GET –∑–∞–ø—Ä–æ—Å–∞ –∑–¥–µ—Å—å
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    res.send('GET –∑–∞–ø—Ä–æ—Å –∫ /web-data —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
  });

app.post('/web-data', async(req, res) => {
    const {queryId, price, size, name} = req.body;
    try {
        await bot.answerWebAppQuery(queryId, {
            type: 'article',
            id: queryId,
            title: '–£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞',
            input_message_content: {
                message_text: `
            –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–∫—É–ø–∫–æ–π! 
        üìã –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞: 
üßæ –ù–∞–∑–≤–∞–Ω–∏–µ: ${name}
üíé –¶–µ–Ω–∞: ${price} ‚ÇΩ, 
üìè –†–∞–∑–º–µ—Ä: ${size} US.

        üöö –î–µ—Ç–∞–ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∏:
üì± –ù–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏: ${phoneNumber}, 
üë§ –§–ò–û: ...., 
üìç –ê–¥—Ä–µ—Å –≤—ã–¥–∞—á–∏: ...

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å zipper app ! ‚ö°`
            }
        })
        return res.status(200).json({});
    } catch (e) {
        return res.status(500).json({})
    }
})

let phoneNumber = ''; // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞

bot.on('contact', (msg) => {
  const chatId = msg.chat.id;
  const contact = msg.contact;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–∞–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  if (contact.phone_number) {
    phoneNumber = contact.phone_number;  
    // –í–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∑–¥–µ—Å—å
    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${phoneNumber}`);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.sendMessage(chatId, `–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${phoneNumber}`);
  } else {
    // –ï—Å–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    bot.sendMessage(chatId, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.');
  }
});

app.get('/getPhoneNumber', (req, res) => {
  res.json({ phoneNumber });
});

let photoFile = '';

bot.on('message', (msg) => {
  const userId = msg.from.id; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
  const chatId = msg.chat.id; // –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /send
  if (msg.text === '/send') {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ getUserProfilePhotos –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.getUserProfilePhotos(userId).then((result) => {
      const photos = result.photos;

      if (photos.length > 0) {
        // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç File –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        photoFile = photos[0][0];

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –æ–±—Ä–∞—Ç–Ω–æ –≤ —á–∞—Ç
        bot.sendPhoto(chatId, photoFile.file_id);
      } else {
        bot.sendMessage(chatId, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /send.');
      }
    }).catch((error) => {
      bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /send.');
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /send:', error);
    });
  }
});

app.get('/getProfilePhoto', (req, res) => {
  res.json({ photo_url: photoFile });
});



const PORT = 8000;

app.listen(PORT, () => {
  console.log(`Server started on PORT ${PORT}`);
});
